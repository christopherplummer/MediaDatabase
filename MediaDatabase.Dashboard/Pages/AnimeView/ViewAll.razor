@page "/anime"
@using MediaDatabase.Dashboard.Data.Anime
@using MediaDatabase.Dashboard.Cache.Interfaces

@inject ICache<Anime> AnimeCache
@inject NavigationManager NavigationManager

<h1>Anime</h1>

@if (anime != null)
{
    <RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced"
                AllowPaging="true" PageSize="20" AllowSorting="true" Data="@anime" TItem="Anime">
        <Columns>
            <RadzenGridColumn TItem="Anime" Property="Attributes.PosterImage.Tiny" Title="Image" Sortable="false" Filterable="false">
                <Template Context="anime">
                    <RadzenImage Path="@anime?.Attributes?.PosterImage?.Tiny" />
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="Anime" Property="Attributes.CanonicalTitle" Title="Name" />
            <RadzenGridColumn TItem="Anime">
                <Template Context="anime">
                    <RadzenButton Icon="edit" Click="@(args => View(anime.Attributes.Slug))" />
                </Template>
            </RadzenGridColumn>
        </Columns>
    </RadzenGrid>
}
else
{
    <p>
        <em>Loading...</em>
    </p>
}

@code {
    private List<Anime> anime;

    protected override async Task OnInitializedAsync()
    {
        anime = AnimeCache.Get().Distinct().OrderBy(x => x.Attributes.CanonicalTitle).ToList();
    }

    private void View(string slug)
    {
        NavigationManager.NavigateTo($"/anime/{slug}");
    }

}